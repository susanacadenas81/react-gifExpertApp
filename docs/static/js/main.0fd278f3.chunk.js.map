{"version":3,"sources":["components/AddCategory.js","helpers/getGiffs.js","components/GiffGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiffGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiffExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAe,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAKkB,IAAMR,IACtB,kCAAMA,EAAN,WCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACtB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACP1B,EAASC,GAAW0B,MAAM,SAAAC,GACtBH,EAAS,CACTjB,KAAMoB,EACNL,SAAS,SAId,CAACtB,IAGGuB,EDf0BK,CAAa5B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDlB,EAArD,OAECsB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACI,6BAEQL,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADEA,EAAIC,eEQvBkB,EArBO,WAClB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OAAQ,qCAEJ,+CACI,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACJ,6BAEM6C,EAAWrB,KAAK,SAACsB,GAAD,OAAO,cAAC,EAAD,CAEvB/B,SAAU+B,GADHA,Y,MCTrBC,IAASC,OAAQ,cAAC,EAAD,IACfC,SAASC,eAAe,W","file":"static/js/main.0fd278f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=3&api_key=a9vMGfANtqcTkGgk5W8sPGwKF4bBAqce`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\n\r\nexport const GiffGridItem = ( {id, title, url} ) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src= {url} alt= {title}/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiffGridItem } from './GiffGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs(category);    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className='card-grid'>\r\n                <ol>\r\n                    {\r\n                        images.map( (img) => \r\n                            <GiffGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                            />\r\n                        )\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGiffs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( imgs => {\r\n            setState({\r\n            data: imgs,\r\n            loading: false\r\n            })\r\n    });\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n};\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\n\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiffExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (<>\r\n    \r\n        <h2>GiffExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n        <ol>\r\n            { \r\n              categories.map( (c) => <GifGrid \r\n              key = {c} \r\n              category={c}\r\n              /> \r\n              )\r\n            }\r\n        </ol>\r\n    \r\n    </>)\r\n}\r\n\r\nexport default GiffExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiffExpertApp from './GiffExpertApp'\n\nimport './index.css';\n\nReactDOM.render( <GiffExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}